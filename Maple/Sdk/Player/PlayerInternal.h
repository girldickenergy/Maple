#pragma once

#include "CLR/CLRString.h"
#include "CLR/CLRList.h"
#include "CLR/CLRNullable.h"
#include "Numerics/Vector2.h"

#include "GameModeInternal.h"

struct PlayerInternal : GameModeInternal
{
    long long scoreChecksumNumerical;
    long long unknownPauseThing;
    double jumpCount;
    long long dateTimeCheckTimeInitial;
    CLRList<CLRObject*>* s_arrows;
    CLRObject* ActiveHitObject;
    CLRObject* visualSettings;
    CLRObject* scrubber;
    CLRString* currentProgressString;
    CLRObject* eventManager;
    CLRObject* hitObjectManager;
    CLRObject* pauseCursor;
    CLRObject* pauseCursorText;
    CLRList<CLRObject*>* pauseSprites;
    CLRObject* pauseContinue;
    CLRObject* pauseRetry;
    CLRObject* pauseBack;
    CLRObject* progressBar;
    CLRObject* Ruleset;
    CLRObject* s_breakFail;
    CLRObject* s_breakPass;
    CLRObject* breakStopTimes;
    CLRString* scoreChecksum;
    CLRObject* scoreEntry;
    CLRObject* skip;
    CLRObject* spectatorList;
    CLRObject* spriteManager;
    CLRObject* spriteManagerAdd;
    CLRObject* spriteManagerBelowHitObjectsWidescreen;
    CLRObject* spriteManagerBelowScoreboardWidescreen;
    CLRObject* spriteManagerMetadata;
    CLRObject* spriteManagerInterface;
    CLRObject* spriteManagerInterfaceWidescreen;
    CLRObject* spriteManagerPauseScreen;
    CLRObject* spriteManagerHighest;
    CLRObject* t_star2;
    CLRObject* inputOverlay;
    CLRObject* showInterfaceToggle;
    CLRObject* Loader;
    CLRObject* session;
    CLRList<CLRObject*>* warnings;
    CLRObject* previewAudioTrack;
    CLRObject* pauseScreenLoop;
    CLRObject* OnClick;
    CLRObject* PendingScoreChangeObject;
    CLRList<CLRObject*>* pauseArrows;
    CLRObject* loadingSpinner;
    CLRObject* beatmap;
    float bloomBurst;
    int burstSampleNumber;
    int currentUpdateFrame;
    int comboBurstComboLast;
    int LastPause;
    int missPreviousFrame;
    int progressStringLastPosition;
    int resumeAfterBreakTime;
    int scorePreviousFrame;
    int SkipBoundary;
    int CountdownTime;
    int spectatorListUpdate;
    int Status;
    int lastHitTime;
    int firstHitTime;
    int ModeOriginal;
    float previewAudioTrackVolume;
    int lastPlayerOffsetChange;
    int lastPressTime;
    float distanceChange;
    float lastDistance;
    int twoFrameTime;
    int lastTime;
    int lastFrameTime;
    int pauseSelected;
    int audioStartTime;
    int rankType;
    int leadInTime;
    int audioCheckCount;
    int audioCheckTime;
    int audioCheckTimeComp;
    int dateTimeCheckCount;
    int dateTimeCheckTimeComp;
    int flSkippedThisNote;
    int haxCheckCount;
    int lastIpcCheck;
    bool IsNearSpinner;
    bool IsTutorial;
    bool breakAccountedFor;
    bool comboBurstPending;
    bool failedPreviousFrame;
    bool forceReplayFrame;
    bool frameContainsImportantData;
    bool HasSkippedOutro;
    bool OnlineDataPending;
    bool Passed;
    bool ReportedEndGame;
    bool UnpauseConfirmed;
    bool DrainTime;
    bool InitialAllowSubmission;
    bool inputReceivedAtLeastOnce;
    bool replayModeStable;
    bool incrementPlaycount;
    bool loadDelayAdded;
    bool NewSyncBeatWaiting;
    bool failedState;
    bool togglePausePending;
    bool jumpFrame;
    bool circlePresent;
    bool FinishedInitialAudioSetup;
    bool AsyncLoadComplete;
    bool IsAutoplayReplay;
    bool reloadingAfterChange;
    bool flCheckedThisPlay;
    bool allowSubmissionHaxCheck;
    bool haxFound;
    Vector2 mouseVelocity;
    Vector2 mouseVelocityLastPosition;
    Vector2 pauseLocation;
    Vector2 lastHoveredCircle;
    Vector2 mp;
    CLRNullable<Vector2> lastMp;
    CLRNullable<Vector2> twoFramesAgo;
    uint8_t starBreakAdditive[0x10];
};
